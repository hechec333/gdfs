// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.17.0--rc2
// source: gdfs.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReadChunkArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle int64 `protobuf:"varint,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length int32 `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *ReadChunkArg) Reset() {
	*x = ReadChunkArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdfs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadChunkArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChunkArg) ProtoMessage() {}

func (x *ReadChunkArg) ProtoReflect() protoreflect.Message {
	mi := &file_gdfs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChunkArg.ProtoReflect.Descriptor instead.
func (*ReadChunkArg) Descriptor() ([]byte, []int) {
	return file_gdfs_proto_rawDescGZIP(), []int{0}
}

func (x *ReadChunkArg) GetHandle() int64 {
	if x != nil {
		return x.Handle
	}
	return 0
}

func (x *ReadChunkArg) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ReadChunkArg) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type ReadChunkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Length int32  `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *ReadChunkReply) Reset() {
	*x = ReadChunkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdfs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadChunkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadChunkReply) ProtoMessage() {}

func (x *ReadChunkReply) ProtoReflect() protoreflect.Message {
	mi := &file_gdfs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadChunkReply.ProtoReflect.Descriptor instead.
func (*ReadChunkReply) Descriptor() ([]byte, []int) {
	return file_gdfs_proto_rawDescGZIP(), []int{1}
}

func (x *ReadChunkReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReadChunkReply) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type WriteChunkArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId      int64    `protobuf:"varint,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	Offset      int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Secondaries []string `protobuf:"bytes,3,rep,name=secondaries,proto3" json:"secondaries,omitempty"`
}

func (x *WriteChunkArg) Reset() {
	*x = WriteChunkArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdfs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteChunkArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteChunkArg) ProtoMessage() {}

func (x *WriteChunkArg) ProtoReflect() protoreflect.Message {
	mi := &file_gdfs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteChunkArg.ProtoReflect.Descriptor instead.
func (*WriteChunkArg) Descriptor() ([]byte, []int) {
	return file_gdfs_proto_rawDescGZIP(), []int{2}
}

func (x *WriteChunkArg) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *WriteChunkArg) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *WriteChunkArg) GetSecondaries() []string {
	if x != nil {
		return x.Secondaries
	}
	return nil
}

type WriteChunkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WriteChunkReply) Reset() {
	*x = WriteChunkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdfs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteChunkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteChunkReply) ProtoMessage() {}

func (x *WriteChunkReply) ProtoReflect() protoreflect.Message {
	mi := &file_gdfs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteChunkReply.ProtoReflect.Descriptor instead.
func (*WriteChunkReply) Descriptor() ([]byte, []int) {
	return file_gdfs_proto_rawDescGZIP(), []int{3}
}

type AppendChunkArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId      int64    `protobuf:"varint,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	Secondaries []string `protobuf:"bytes,2,rep,name=secondaries,proto3" json:"secondaries,omitempty"`
}

func (x *AppendChunkArg) Reset() {
	*x = AppendChunkArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdfs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendChunkArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendChunkArg) ProtoMessage() {}

func (x *AppendChunkArg) ProtoReflect() protoreflect.Message {
	mi := &file_gdfs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendChunkArg.ProtoReflect.Descriptor instead.
func (*AppendChunkArg) Descriptor() ([]byte, []int) {
	return file_gdfs_proto_rawDescGZIP(), []int{4}
}

func (x *AppendChunkArg) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *AppendChunkArg) GetSecondaries() []string {
	if x != nil {
		return x.Secondaries
	}
	return nil
}

type AppendChunkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *AppendChunkReply) Reset() {
	*x = AppendChunkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdfs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendChunkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendChunkReply) ProtoMessage() {}

func (x *AppendChunkReply) ProtoReflect() protoreflect.Message {
	mi := &file_gdfs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendChunkReply.ProtoReflect.Descriptor instead.
func (*AppendChunkReply) Descriptor() ([]byte, []int) {
	return file_gdfs_proto_rawDescGZIP(), []int{5}
}

func (x *AppendChunkReply) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ForwardOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sync            bool  `protobuf:"varint,1,opt,name=sync,proto3" json:"sync,omitempty"`
	AtLeaseResponce int32 `protobuf:"varint,2,opt,name=at_lease_responce,json=atLeaseResponce,proto3" json:"at_lease_responce,omitempty"`
	Wait            int32 `protobuf:"varint,3,opt,name=wait,proto3" json:"wait,omitempty"`
}

func (x *ForwardOption) Reset() {
	*x = ForwardOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdfs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardOption) ProtoMessage() {}

func (x *ForwardOption) ProtoReflect() protoreflect.Message {
	mi := &file_gdfs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardOption.ProtoReflect.Descriptor instead.
func (*ForwardOption) Descriptor() ([]byte, []int) {
	return file_gdfs_proto_rawDescGZIP(), []int{6}
}

func (x *ForwardOption) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

func (x *ForwardOption) GetAtLeaseResponce() int32 {
	if x != nil {
		return x.AtLeaseResponce
	}
	return 0
}

func (x *ForwardOption) GetWait() int32 {
	if x != nil {
		return x.Wait
	}
	return 0
}

type ForwardDataArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId     int64          `protobuf:"varint,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	Data       []byte         `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	ChainOrder []string       `protobuf:"bytes,3,rep,name=chain_order,json=chainOrder,proto3" json:"chain_order,omitempty"`
	Option     *ForwardOption `protobuf:"bytes,4,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *ForwardDataArg) Reset() {
	*x = ForwardDataArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdfs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardDataArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardDataArg) ProtoMessage() {}

func (x *ForwardDataArg) ProtoReflect() protoreflect.Message {
	mi := &file_gdfs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardDataArg.ProtoReflect.Descriptor instead.
func (*ForwardDataArg) Descriptor() ([]byte, []int) {
	return file_gdfs_proto_rawDescGZIP(), []int{7}
}

func (x *ForwardDataArg) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *ForwardDataArg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ForwardDataArg) GetChainOrder() []string {
	if x != nil {
		return x.ChainOrder
	}
	return nil
}

func (x *ForwardDataArg) GetOption() *ForwardOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type ForwardDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepsonceNode int32 `protobuf:"varint,1,opt,name=repsonce_node,json=repsonceNode,proto3" json:"repsonce_node,omitempty"`
}

func (x *ForwardDataReply) Reset() {
	*x = ForwardDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdfs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardDataReply) ProtoMessage() {}

func (x *ForwardDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_gdfs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardDataReply.ProtoReflect.Descriptor instead.
func (*ForwardDataReply) Descriptor() ([]byte, []int) {
	return file_gdfs_proto_rawDescGZIP(), []int{8}
}

func (x *ForwardDataReply) GetRepsonceNode() int32 {
	if x != nil {
		return x.RepsonceNode
	}
	return 0
}

var File_gdfs_proto protoreflect.FileDescriptor

var file_gdfs_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x64, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x41, 0x72, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x3c, 0x0a, 0x0e, 0x52,
	0x65, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x62, 0x0a, 0x0d, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x41, 0x72, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x11, 0x0a,
	0x0f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x4b, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x41,
	0x72, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x2a, 0x0a,
	0x10, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x63, 0x0a, 0x0d, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x2a,
	0x0a, 0x11, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x74, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x22, 0x8c,
	0x01, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a,
	0x10, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x73, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x73, 0x6f, 0x6e,
	0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x32, 0x90, 0x02, 0x0a, 0x0b, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0d, 0x47, 0x52, 0x50, 0x43, 0x52, 0x65,
	0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x41, 0x72, 0x67, 0x1a, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0e, 0x47, 0x52, 0x50, 0x43, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x41, 0x72, 0x67, 0x1a, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0f, 0x47, 0x52, 0x50, 0x43, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x41, 0x72, 0x67, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0f, 0x47, 0x52, 0x50, 0x43, 0x46, 0x6f,
	0x72, 0x57, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x67,
	0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gdfs_proto_rawDescOnce sync.Once
	file_gdfs_proto_rawDescData = file_gdfs_proto_rawDesc
)

func file_gdfs_proto_rawDescGZIP() []byte {
	file_gdfs_proto_rawDescOnce.Do(func() {
		file_gdfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_gdfs_proto_rawDescData)
	})
	return file_gdfs_proto_rawDescData
}

var file_gdfs_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_gdfs_proto_goTypes = []interface{}{
	(*ReadChunkArg)(nil),     // 0: proto.ReadChunkArg
	(*ReadChunkReply)(nil),   // 1: proto.ReadChunkReply
	(*WriteChunkArg)(nil),    // 2: proto.WriteChunkArg
	(*WriteChunkReply)(nil),  // 3: proto.WriteChunkReply
	(*AppendChunkArg)(nil),   // 4: proto.AppendChunkArg
	(*AppendChunkReply)(nil), // 5: proto.AppendChunkReply
	(*ForwardOption)(nil),    // 6: proto.ForwardOption
	(*ForwardDataArg)(nil),   // 7: proto.ForwardDataArg
	(*ForwardDataReply)(nil), // 8: proto.ForwardDataReply
}
var file_gdfs_proto_depIdxs = []int32{
	6, // 0: proto.ForwardDataArg.option:type_name -> proto.ForwardOption
	0, // 1: proto.ChunkServer.GRPCReadChunk:input_type -> proto.ReadChunkArg
	2, // 2: proto.ChunkServer.GRPCWriteChunk:input_type -> proto.WriteChunkArg
	4, // 3: proto.ChunkServer.GRPCAppendChunk:input_type -> proto.AppendChunkArg
	7, // 4: proto.ChunkServer.GRPCForWardData:input_type -> proto.ForwardDataArg
	1, // 5: proto.ChunkServer.GRPCReadChunk:output_type -> proto.ReadChunkReply
	3, // 6: proto.ChunkServer.GRPCWriteChunk:output_type -> proto.WriteChunkReply
	5, // 7: proto.ChunkServer.GRPCAppendChunk:output_type -> proto.AppendChunkReply
	8, // 8: proto.ChunkServer.GRPCForWardData:output_type -> proto.ForwardDataReply
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gdfs_proto_init() }
func file_gdfs_proto_init() {
	if File_gdfs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gdfs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadChunkArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdfs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadChunkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdfs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteChunkArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdfs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteChunkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdfs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendChunkArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdfs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendChunkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdfs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdfs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardDataArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdfs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gdfs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gdfs_proto_goTypes,
		DependencyIndexes: file_gdfs_proto_depIdxs,
		MessageInfos:      file_gdfs_proto_msgTypes,
	}.Build()
	File_gdfs_proto = out.File
	file_gdfs_proto_rawDesc = nil
	file_gdfs_proto_goTypes = nil
	file_gdfs_proto_depIdxs = nil
}
